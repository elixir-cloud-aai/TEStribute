openapi: 3.0.0
info:
  title: TEStribute OpenAPI specification
  contact:
    name: ELIXIR Cloud & AAI group
    email: alexander.kanitz@alumni.ethz.ch
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: 0.2.0
servers:
- url: /
paths:
  /rank-services:
    post:
      summary: |-
        Given lists of known GA4GH TES and DRS instances and a
        task's resource requirements, the endpoint returns
        estimates for the task's total time and cost requirements
        for every available combination of TES and DRS instances,
        the latter separately for each input object. By passing a
        rank mode, service combinations are ranked either by
        increasing times, costs or combinations thereof.
      operationId: rank_services
      requestBody:
        description: |-
          Lists of GA4GH TES and DRS instances, task resource
          requirements and the rank mode.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        required: true
      responses:
        200:
          description: |-
            All available combinations of TES and DRS instances,
            the latter indicated separately for each input object,
            rank-ordered according to the rank mode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: The request is malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: The request is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-openapi-router-controller: controllers
components:
  schemas:
    AccessUris:
      required:
      - tes_uri
      type: object
      properties:
        tes_uri:
          type: string
          description: Access URI for the TES instance.
          format: uri
      additionalProperties: true
      description: |-
        Access URIs for a TES instance and, if available,
        a task's input objects.
      example:
        tes_uri: https://://tes-1.service
        input_object_1: https://object-store-1.org/object-1
        input_object_2: https://object-store-2.org/object-2
        input_object_3: https://object-store-3.org/object-3
    Costs:
      required:
      - amount
      - currency
      type: object
      properties:
        amount:
          type: number
          description: Numeric value.
          format: double
        currency:
          type: string
          description: Currency/unit.
          format: currency
          enum:
            - AUD
            - BRL
            - BTC
            - CAD
            - CHF
            - CNH
            - EUR
            - GBP
            - HKD
            - INR
            - KRW
            - JPY
            - MXN
            - NOK
            - NZD
            - RUB
            - SEK
            - SGD
            - TRY
            - USD
            - ZAR
      description: Describes costs with a given value and currency.
      example:
        amount: 1000
        currency: BTC
    Error:
      required:
      - message
      - reason
      type: object
      properties:
        message:
          type: string
          description: |-
            A human readable message providing more details about the error.
          example:
            Required parameter 'tes_uris' is missing.
        reason:
          type: string
          description: |-
            Unique identifier for this error, but *not* the HTTP response code
            (e.g., name of exception).
          example: ValueError
      description: An individual error message.
    ErrorResponse:
      required:
      - code
      - errors
      - message
      type: object
      properties:
        code:
          type: integer
          description: HTTP status code (e.g., 400, 404).
          format: int64
          example: 400
        errors:
          type: array
          description: List of associated errors and warnings.
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
          description: |-
            A human readable message providing more details about the error.
          example: Required parameter `tes_uris` is missing.
      description: A response object for detailed error messages.
    Request:
      required:
      - resource_requirements
      - tes_uris
      type: object
      properties:
        object_ids:
          $ref: '#/components/schemas/Strings'
          description: DRS IDs of objects required by the task.
        drs_uris:
          $ref: '#/components/schemas/Uris'
          description: |-
            URIs of known DRS instances that objects may be read from
            or written to.
        mode:
          description: |-
            Mode with which service combinations are ranked. Services
            can be ranked by either 'cost', 'time' or both. For the latter,
            specify a number between 0 and 1, with the boundaries
            representing weights at which services are ranked entirely
            by cost and time, respectively. It is also possible to
            randomize rankings (specify 'random' or -1).
          default: 0.5
          example: random
          oneOf:
          - maximum: 1
            minimum: -1
            type: integer
          - maximum: 1
            exclusiveMaximum: true
            minimum: 0
            exclusiveMinimum: true
            type: number
          - type: string
            enum:
            - cost
            - random
            - time
        resource_requirements:
          $ref: '#/components/schemas/ResourceRequirements'
        tes_uris:
          $ref: '#/components/schemas/Uris'
          description: |-
            URIs of known TES instances that the task may be computed on.
      description: Request schema describing the endpoint's input.
    Response:
      required:
      - service_combinations
      - warnings
      type: object
      properties:
        service_combinations:
          type: array
          items:
            $ref: '#/components/schemas/ServiceCombination'
        warnings:
          type: array
          description: |-
            Warning messages providing details about potentially serious issues
            that arose during execution.
          example:
          - DRS https://drs-1.service could not be accessed.
          - DRS https://drs-2.service could not be accessed.
          - TES https://tes-1.service could not be accessed.
          items:
            type: string
          default: []
      description: Response schema describing the endpoint's output.
    ResourceRequirements:
      required:
      - cpu_cores
      - disk_gb
      - execution_time_sec
      - ram_gb
      type: object
      properties:
        cpu_cores:
          type: integer
          description: Requested number of CPUs.
          format: int64
        disk_gb:
          type: number
          description: Requested disk size in gigabytes (GB).
          format: double
        execution_time_sec:
          type: integer
          description: Requested execution time in seconds (s).
          format: int64
        preemptible:
          type: boolean
          description: |-
            Is the task allowed to run on preemptible compute
            instances (e.g. AWS Spot)?
          format: boolean
          default: true
        ram_gb:
          type: number
          description: Requested RAM required in gigabytes (GB).
          format: double
        zones:
          type: array
          description: Request that the task be run in these compute zones.
          items:
            type: string
          default: []
      description: |-
        Resources requested by a task.
      example:
        cpu_cores: 1
        execution_time_sec: 60
        preemptible: true
        ram_gb: 4
        disk_gb: 1
        zones:
        - zone-1
        - zone-2
    ServiceCombination:
      required:
      - access_uris
      - cost_estimate
      - rank
      - time_estimate
      type: object
      properties:
        access_uris:
          $ref: '#/components/schemas/AccessUris'
        cost_estimate:
          $ref: '#/components/schemas/Costs'
        rank:
          type: integer
          description: |-
            Rank among all service combinations. Meaning of rank
            dependent on rank mode.
          format: int64
          example: 1
        time_estimate:
          type: number
          description: |-
            Time estimated for the task to be completed, in seconds (s).
          format: double
      description: |-
        A combination of TES and input DRS object access URIs
        together with cost/time estimates and a rank.
      example:
        time_estimate: 300
        cost_estimate:
          amount: 1000
          currency: BTC
        access_uris:
          tes_uri: https://://tes-1.service
          input_object_1: https://object-store-1.org/object-1
          input_object_2: https://object-store-2.org/object-2
          input_object_3: https://object-store-3.org/object-3
        rank: 1
    Strings:
      type: array
      description: A generic array of strings.
      example:
      - string-1
      - string-2
      - string-3
      items:
        type: string
      default: []
    Uris:
      type: array
      description: An array of URIs.
      example:
      - https://url-1.info
      - https://url-2.info
      - https://url-3.info
      items:
        type: string
        format: uri
      default: []
